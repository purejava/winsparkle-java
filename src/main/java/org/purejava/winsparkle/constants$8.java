// Generated by jextract

package org.purejava.winsparkle;

import java.lang.foreign.FunctionDescriptor;
import java.lang.invoke.MethodHandle;
class constants$8 {

    static final FunctionDescriptor win_sparkle_set_automatic_check_for_updates$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle win_sparkle_set_automatic_check_for_updates$MH = RuntimeHelper.downcallHandle(
        "win_sparkle_set_automatic_check_for_updates",
        constants$8.win_sparkle_set_automatic_check_for_updates$FUNC
    );
    static final FunctionDescriptor win_sparkle_get_automatic_check_for_updates$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle win_sparkle_get_automatic_check_for_updates$MH = RuntimeHelper.downcallHandleVariadic(
        "win_sparkle_get_automatic_check_for_updates",
        constants$8.win_sparkle_get_automatic_check_for_updates$FUNC
    );
    static final FunctionDescriptor win_sparkle_set_update_check_interval$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle win_sparkle_set_update_check_interval$MH = RuntimeHelper.downcallHandle(
        "win_sparkle_set_update_check_interval",
        constants$8.win_sparkle_set_update_check_interval$FUNC
    );
    static final FunctionDescriptor win_sparkle_get_update_check_interval$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle win_sparkle_get_update_check_interval$MH = RuntimeHelper.downcallHandleVariadic(
        "win_sparkle_get_update_check_interval",
        constants$8.win_sparkle_get_update_check_interval$FUNC
    );
    static final FunctionDescriptor win_sparkle_get_last_check_time$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle win_sparkle_get_last_check_time$MH = RuntimeHelper.downcallHandleVariadic(
        "win_sparkle_get_last_check_time",
        constants$8.win_sparkle_get_last_check_time$FUNC
    );
    static final FunctionDescriptor win_sparkle_error_callback_t$FUNC = FunctionDescriptor.ofVoid();
}


